import pandas as pd
import requests

# === CONFIGURATION ===
API_URL = "https://demo.defectdojo.org/api/v2/tests/"
TOKEN = "hdjdjdjdj"
HEADERS = {
    "Authorization": f"Token {TOKEN}",
    "Content-Type": "application/json"
}
ENVIRONMENT_ID = 7
TAGS = ["vapt_q3_2025"]
EXCEL_FILE = "engagements.xlsx"  # Make sure this file exists with 'engagement' column

# === TEST DEFINITIONS ===
TEST_DEFINITIONS = [
    {"name": "API Test", "test_type_id": 1},
    {"name": "Burp Scan", "test_type_id": 27},
    {"name": "Manual Code Review", "test_type_id": 7},
    {"name": "Pen Test", "test_type_id": 3},
]

# === LOAD ENGAGEMENTS FROM EXCEL ===
try:
    df = pd.read_excel(EXCEL_FILE)
except Exception as e:
    print(f"[ERROR] Failed to read Excel file: {e}")
    exit(1)

if "engagement" not in df.columns:
    print("[ERROR] Excel file must contain a column named 'engagement'")
    exit(1)

# === MAIN LOGIC ===
for index, row in df.iterrows():
    try:
        engagement_id = int(row["engagement"])
    except ValueError:
        print(f"[SKIP] Invalid engagement ID at row {index}")
        continue

    # Get engagement details
    engagement_resp = requests.get(
        f"https://demo.defectdojo.org/api/v2/engagements/{engagement_id}/",
        headers=HEADERS
    )

    if engagement_resp.status_code != 200:
        print(f"[ERROR] Failed to fetch engagement {engagement_id}: {engagement_resp.text}")
        continue

    engagement_data = engagement_resp.json()
    try:
        target_start = engagement_data["target_start"]
        target_end = engagement_data["target_end"]
        lead = int(engagement_data["lead"])
    except KeyError as e:
        print(f"[ERROR] Missing expected field in engagement {engagement_id}: {e}")
        continue

    for test in TEST_DEFINITIONS:
        payload = {
            "engagement": int(engagement_id),
            "test_type": int(test["test_type_id"]),
            "title": test["name"],
            "scan_type": test["name"],
            "target_start": target_start,
            "target_end": target_end,
            "lead": int(lead),
            "environment": int(ENVIRONMENT_ID),
            "tags": TAGS
        }

        response = requests.post(API_URL, headers=HEADERS, json=payload)

        if response.status_code == 201:
            print(f"[SUCCESS] Created test '{test['name']}' for engagement {engagement_id}")
        else:
            print(f"[FAIL] Could not create test '{test['name']}' for engagement {engagement_id}: {response.text}")