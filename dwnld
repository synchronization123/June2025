import tkinter as tk
from tkinter import scrolledtext, messagebox
import subprocess
import threading
import os

# Function to run script and capture output
def run_script(script_name):
    def thread_function():
        try:
            output_console.insert(tk.END, f"\n[Running] {script_name}...\n")
            output_console.see(tk.END)

            # Execute the script
            result = subprocess.run(
                ["python", script_name], 
                stdout=subprocess.PIPE, 
                stderr=subprocess.PIPE, 
                text=True
            )

            # Display output
            output_console.insert(tk.END, result.stdout)
            if result.stderr:
                output_console.insert(tk.END, f"\n[Error]\n{result.stderr}")
            output_console.insert(tk.END, "\n[Finished]\n")
            output_console.see(tk.END)

        except Exception as e:
            output_console.insert(tk.END, f"\n[Exception] {str(e)}\n")
            output_console.see(tk.END)

    threading.Thread(target=thread_function).start()

# GUI window
root = tk.Tk()
root.title("Jira Automation Panel")
root.geometry("700x500")
root.resizable(False, False)

# Buttons frame
btn_frame = tk.Frame(root)
btn_frame.pack(pady=10)

btn1 = tk.Button(btn_frame, text="Fetch Jira", width=20, command=lambda: run_script("fetch_jira.py"))
btn2 = tk.Button(btn_frame, text="Update Component", width=20, command=lambda: run_script("update_component.py"))
btn3 = tk.Button(btn_frame, text="Fetch Comments", width=20, command=lambda: run_script("fetch_comments.py"))

btn1.grid(row=0, column=0, padx=10)
btn2.grid(row=0, column=1, padx=10)
btn3.grid(row=0, column=2, padx=10)

# Console Output Area
output_console = scrolledtext.ScrolledText(root, width=85, height=25, wrap=tk.WORD, bg="#1e1e1e", fg="white", font=("Consolas", 10))
output_console.pack(padx=10, pady=10)

root.mainloop()