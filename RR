import os
import requests
from bs4 import BeautifulSoup
from urllib.parse import urlparse
import hashlib
import http.cookiejar

# === Config ===
html_input = 'input.html'
html_output = 'output.html'
image_folder = 'images'
cookie_file = 'cookies.txt'  # Exported using browser extension

# Load cookies from cookies.txt
cookie_jar = http.cookiejar.MozillaCookieJar()
cookie_jar.load(cookie_file, ignore_discard=True, ignore_expires=True)

# Ensure output folder exists
os.makedirs(image_folder, exist_ok=True)

# Load and parse the HTML
with open(html_input, 'r', encoding='utf-8') as f:
    soup = BeautifulSoup(f, 'html.parser')

# Download images
for img_tag in soup.find_all('img'):
    src = img_tag.get('src')
    if not src or not src.startswith('http'):
        continue

    ext = '.png'
    filename = hashlib.md5(src.encode()).hexdigest() + ext
    local_path = os.path.join(image_folder, filename)

    if not os.path.exists(local_path):
        try:
            response = requests.get(src, cookies=cookie_jar, timeout=10)
            if 'image' in response.headers.get('Content-Type', ''):
                with open(local_path, 'wb') as f_out:
                    f_out.write(response.content)
                print(f"✅ Saved image: {src}")
            else:
                print(f"⚠️ Skipped (not image): {src} — {response.status_code}")
        except Exception as e:
            print(f"❌ Error: {e}")
            continue

    img_tag['src'] = os.path.join(image_folder, filename)

# Save updated HTML
with open(html_output, 'w', encoding='utf-8') as f:
    f.write(str(soup))

print(f"\n✅ All done! Output saved to: {html_output}")