import os
import sys
import threading
import webbrowser
import requests
import datetime
from dateutil.relativedelta import relativedelta
from flask import Flask, request, jsonify, render_template_string
import pystray
from PIL import Image

app = Flask(__name__)

# Configure DefectDojo
DEFECT_DOJO_URL = 'http://your-defectdojo-url'  # e.g., 'http://localhost:8080'
API_KEY = 'your-api-key-here'
HEADERS = {
    'Authorization': f'Token {API_KEY}',
    'Content-Type': 'application/json'
}

# Inline Bootstrap 5 CSS (minified, from Bootstrap 5.3.3)
BOOTSTRAP_CSS = """
:root{--bs-blue:#0d6efd;--bs-indigo:#6610f2;--bs-purple:#6f42c1;--bs-pink:#d63384;--bs-red:#dc3545;--bs-orange:#fd7e14;--bs-yellow:#ffc107;--bs-green:#198754;--bs-teal:#20c997;--bs-cyan:#0dcaf0;--bs-black:#000;--bs-white:#fff;--bs-gray:#6c757d;--bs-gray-dark:#343a40;--bs-gray-100:#f8f9fa;--bs-gray-200:#e9ecef;--bs-gray-300:#dee2e6;--bs-gray-400:#ced4da;--bs-gray-500:#adb5bd;--bs-gray-600:#6c757d;--bs-gray-700:#495057;--bs-gray-800:#343a40;--bs-gray-900:#212529;--bs-primary:#0d6efd;--bs-secondary:#6c757d;--bs-success:#198754;--bs-info:#0dcaf0;--bs-warning:#ffc107;--bs-danger:#dc3545;--bs-light:#f8f9fa;--bs-dark:#212529;--bs-primary-rgb:13,110,253;--bs-secondary-rgb:108,117,125;--bs-success-rgb:25,135,84;--bs-info-rgb:13,202,240;--bs-warning-rgb:255,193,7;--bs-danger-rgb:220,53,69;--bs-light-rgb:248,249,250;--bs-dark-rgb:33,37,41;--bs-primary-text-emphasis:#052c65;--bs-secondary-text-emphasis:#2b2f32;--bs-success-text-emphasis:#0a3622;--bs-info-text-emphasis:#055160;--bs-warning-text-emphasis:#664d03;--bs-danger-text-emphasis:#58151c;--bs-light-text-emphasis:#495057;--bs-dark-text-emphasis:#495057;--bs-primary-bg-subtle:#cfe2ff;--bs-secondary-bg-subtle:#e9ecef;--bs-success-bg-subtle:#d1e7dd;--bs-info-bg-subtle:#cff4fc;--bs-warning-bg-subtle:#fff3cd;--bs-danger-bg-subtle:#f8d7da;--bs-light-bg-subtle:#fcfcfd;--bs-dark-bg-subtle:#ced4da;--bs-primary-border-subtle:#9ec5fe;--bs-secondary-border-subtle:#ced4da;--bs-success-border-subtle:#a3cfbb;--bs-info-border-subtle:#9eeaf9;--bs-warning-border-subtle:#ffe69c;--bs-danger-border-subtle:#f1aeb5;--bs-light-border-subtle:#e9ecef;--bs-dark-border-subtle:#adb5bd;--bs-white-rgb:255,255,255;--bs-black-rgb:0,0,0;--bs-font-sans-serif:system-ui,-apple-system,"Segoe UI",Roboto,"Helvetica Neue","Noto Sans","Liberation Sans",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";--bs-font-monospace:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;--bs-gradient:linear-gradient(180deg,rgba(255,255,255,.15),rgba(255,255,255,0));--bs-body-font-family:var(--bs-font-sans-serif);--bs-body-font-size:1rem;--bs-body-font-weight:400;--bs-body-line-height:1.5;--bs-body-color:#212529;--bs-body-color-rgb:33,37,41;--bs-body-bg:#fff;--bs-body-bg-rgb:255,255,255;--bs-emphasis-color:#000;--bs-emphasis-color-rgb:0,0,0;--bs-secondary-color:rgba(33,37,41,.75);--bs-secondary-color-rgb:33,37,41;--bs-secondary-bg:#e9ecef;--bs-secondary-bg-rgb:233,236,239;--bs-tertiary-color:rgba(33,37,41,.5);--bs-tertiary-color-rgb:33,37,41;--bs-tertiary-bg:#f8f9fa;--bs-tertiary-bg-rgb:248,249,250;--bs-link-color:#0d6efd;--bs-link-color-rgb:13,110,253;--bs-link-decoration:underline;--bs-link-hover-color:#0a58ca;--bs-link-hover-color-rgb:10,88,202;--bs-code-color:#d63384;--bs-highlight-bg:#fff3cd;--bs-border-width:1px;--bs-border-style:solid;--bs-border-color:#dee2e6;--bs-border-color-translucent:rgba(0,0,0,.175);--bs-border-radius:.375rem;--bs-border-radius-sm:.25rem;--bs-border-radius-lg:.5rem;--bs-border-radius-xl:1rem;--bs-border-radius-xxl:2rem;--bs-border-radius-2xl:var(--bs-border-radius-xxl);--bs-border-radius-pill:50rem;--bs-box-shadow:0 .5rem 1rem rgba(0,0,0,.15);--bs-box-shadow-sm:0 .125rem .25rem rgba(0,0,0,.075);--bs-box-shadow-lg:0 1rem 3rem rgba(0,0,0,.175);--bs-box-shadow-inset:inset 0 1px 2px rgba(0,0,0,.075);--bs-focus-ring-width:.25rem;--bs-focus-ring-opacity:.25;--bs-focus-ring-color:rgba(13,110,253,.25);--bs-form-valid-color:#198754;--bs-form-valid-border-color:#198754;--bs-form-invalid-color:#dc3545;--bs-form-invalid-border-color:#dc3545}*,:after,:before{box-sizing:border-box}@media (prefers-reduced-motion:no-preference){:root{scroll-behavior:smooth}}body{margin:0;font-family:var(--bs-body-font-family);font-size:var(--bs-body-font-size);font-weight:var(--bs-body-font-weight);line-height:var(--bs-body-line-height);color:var(--bs-body-color);text-align:var(--bs-body-text-align);background-color:var(--bs-body-bg);-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:transparent}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem;font-weight:500;line-height:1.2}.h1,h1{font-size:calc(1.375rem + 1.5vw)}@media (min-width:1200px){.h1,h1{font-size:2.5rem}}.h2,h2{font-size:calc(1.325rem + .9vw)}@media (min-width:1200px){.h2,h2{font-size:2rem}}.h3,h3{font-size:calc(1.3rem + .6vw)}@media (min-width:1200px){.h3,h3{font-size:1.75rem}}.h4,h4{font-size:calc(1.275rem + .3vw)}@media (min-width:1200px){.h4,h4{font-size:1.5rem}}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}.container,.container-fluid,.container-lg,.container-md,.container-sm,.container-xl,.container-xxl{width:100%;padding-right:calc(var(--bs-gutter-x)*.5);padding-left:calc(var(--bs-gutter-x)*.5);margin-right:auto;margin-left:auto}@media (min-width:576px){.container,.container-sm{max-width:540px}}@media (min-width:768px){.container,.container-md,.container-sm{max-width:720px}}@media (min-width:992px){.container,.container-lg,.container-md,.container-sm{max-width:960px}}@media (min-width:1200px){.container,.container-lg,.container-md,.container-sm,.container-xl{max-width:1140px}}@media (min-width:1400px){.container,.container-lg,.container-md,.container-sm,.container-xl,.container-xxl{max-width:1320px}}.form-label{margin-bottom:.5rem}.col-form-label{padding-top:calc(.375rem + var(--bs-border-width));padding-bottom:calc(.375rem + var(--bs-border-width));margin-bottom:0;font-size:inherit;line-height:1.5}.form-control{display:block;width:100%;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:var(--bs-body-color);background-color:var(--bs-body-bg);background-clip:padding-box;border:var(--bs-border-width) solid var(--bs-border-color);appearance:none;border-radius:var(--bs-border-radius);transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control:focus{color:var(--bs-body-color);background-color:var(--bs-body-bg);border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-select{display:block;width:100%;padding:.375rem 2.25rem .375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:var(--bs-body-color);background-color:var(--bs-body-bg);background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e");background-repeat:no-repeat;background-position:right .75rem center;background-size:16px 12px;border:var(--bs-border-width) solid var(--bs-border-color);border-radius:var(--bs-border-radius);transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;appearance:none}@media (prefers-reduced-motion:reduce){.form-select{transition:none}}.form-select:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-check{display:block;min-height:1.5rem;padding-left:1.5em;margin-bottom:.125rem}.form-check .form-check-input{float:left;margin-left:-1.5em}.form-check-input{width:1em;height:1em;margin-top:.25em;vertical-align:top;background-color:var(--bs-body-bg);background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e");background-repeat:no-repeat;background-position:center;background-size:contain;border:var(--bs-border-width) solid var(--bs-border-color);appearance:none}.form-check-input[type=checkbox]{border-radius:.25em}.form-check-input:checked{background-color:#0d6efd;border-color:#0d6efd}.form-check-label{display:block;cursor:pointer}.btn{display:inline-block;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:var(--bs-body-color);text-align:center;text-decoration:none;vertical-align:middle;cursor:pointer;user-select:none;background-color:transparent;border:var(--bs-border-width) solid transparent;border-radius:var(--bs-border-radius);transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:hover{text-decoration:none}.btn:focus{outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.btn-primary{color:#fff;background-color:#0d6efd;border-color:#0d6efd}.btn-primary:hover{color:#fff;background-color:#0b5ed7;border-color:#0a58ca}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:hover{color:#fff;background-color:#5c636a;border-color:#565e64}.card{position:relative;display:flex;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:var(--bs-border-width) solid var(--bs-border-color);border-radius:var(--bs-border-radius)}.card-body{flex:1 1 auto;padding:1rem 1rem}.modal{display:none;position:fixed;top:0;left:0;z-index:1055;width:100%;height:100%;overflow-x:hidden;overflow-y:auto;outline:0}.modal-dialog{position:relative;width:auto;margin:.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:transform .3s ease-out;transform:translate(0,-50px)}@media (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{transform:none}.modal-content{position:relative;display:flex;flex-direction:column;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:var(--bs-border-width) solid rgba(0,0,0,.2);border-radius:.5rem;outline:0}.modal-header{display:flex;flex-shrink:0;align-items:center;justify-content:space-between;padding:1rem 1rem;border-bottom:var(--bs-border-width) solid var(--bs-border-color);border-top-left-radius:calc(.5rem - var(--bs-border-width));border-top-right-radius:calc(.5rem - var(--bs-border-width))}.modal-title{line-height:1.5}.modal-body{position:relative;flex:1 1 auto;padding:1rem}.modal-footer{display:flex;flex-wrap:wrap;flex-shrink:0;align-items:center;justify-content:flex-end;padding:.75rem;border-top:var(--bs-border-width) solid var(--bs-border-color);border-bottom-right-radius:calc(.5rem - var(--bs-border-width));border-bottom-left-radius:calc(.5rem - var(--bs-border-width))}.modal-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}@media (min-width:576px){.modal-dialog{max-width:500px;margin:1.75rem auto}}
"""

# Inline Select2 CSS
SELECT2_CSS = """
.select2-container{box-sizing:border-box;display:inline-block;margin:0;position:relative;vertical-align:middle}.select2-container .select2-selection--single{box-sizing:border-box;cursor:pointer;display:block;height:28px;user-select:none;-webkit-user-select:none}.select2-container .select2-selection--single .select2-selection__rendered{display:block;padding-left:8px;padding-right:20px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.select2-container .select2-selection--single .select2-selection__clear{background-color:transparent;border:none;font-size:1em}.select2-container[dir="rtl"] .select2-selection--single .select2-selection__rendered{padding-right:8px;padding-left:20px}.select2-container .select2-selection--multiple{box-sizing:border-box;cursor:pointer;display:block;min-height:32px;user-select:none;-webkit-user-select:none}.select2-container .select2-selection--multiple .select2-selection__rendered{display:inline-block;overflow:hidden;padding:0;text-overflow:ellipsis;white-space:nowrap}.select2-container .select2-search--inline{float:left}.select2-container .select2-search--inline .select2-search__field{box-sizing:border-box;border:none;font-size:100%;margin-top:5px;padding:0}.select2-container .select2-search--inline .select2-search__field::-webkit-search-cancel-button{-webkit-appearance:none}.select2-dropdown{background-color:#fff;border:1px solid #aaa;border-radius:4px;box-sizing:border-box;display:block;position:absolute;left:-100000px;width:100%;z-index:1051}.select2-results{display:block}.select2-results__options{list-style:none;margin:0;padding:0}.select2-results__option{padding:6px;user-select:none;-webkit-user-select:none}.select2-results__option[aria-selected]{cursor:pointer}.select2-container--open .select2-dropdown{left:0}.select2-container--open .select2-dropdown--above{border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0}.select2-container--open .select2-dropdown--below{border-top:none;border-top-left-radius:0;border-top-right-radius:0}.select2-search--dropdown{display:block;padding:4px}.select2-search--dropdown .select2-search__field{padding:4px;width:100%;box-sizing:border-box}.select2-search--dropdown .select2-search__field::-webkit-search-cancel-button{-webkit-appearance:none}.select2-search--dropdown.select2-search--hide{display:none}.select2-close-mask{border:0;margin:0;padding:0;display:block;position:fixed;left:0;top:0;min-height:100%;min-width:100%;height:auto;width:auto;opacity:0;z-index:99;background-color:#fff;filter:alpha(opacity=0)}.select2-hidden-accessible{border:0 !important;clip:rect(0 0 0 0) !important;-webkit-clip-path:inset(50%) !important;clip-path:inset(50%) !important;height:1px !important;overflow:hidden !important;padding:0 !important;position:absolute !important;width:1px !important;white-space:nowrap !important}.select2-container--default .select2-selection--single{background-color:#fff;border:1px solid #aaa;border-radius:4px}.select2-container--default .select2-selection--single .select2-selection__rendered{color:#444;line-height:28px}.select2-container--default .select2-selection--single .select2-selection__clear{cursor:pointer;float:right;font-weight:bold;height:26px;margin-right:20px;padding-right:0px}.select2-container--default .select2-selection--single .select2-selection__placeholder{color:#999}.select2-container--default .select2-selection--single .select2-selection__arrow{height:26px;position:absolute;top:1px;right:1px;width:20px}.select2-container--default .select2-selection--single .select2-selection__arrow b{border-color:#888 transparent transparent transparent;border-style:solid;border-width:5px 4px 0 4px;height:0;left:50%;margin-left:-4px;margin-top:-2px;position:absolute;top:50%;width:0}.select2-container--default[dir="rtl"] .select2-selection--single .select2-selection__clear{float:left}.select2-container--default[dir="rtl"] .select2-selection--single .select2-selection__arrow{left:1px;right:auto}.select2-container--default .select2-selection--multiple{background-color:white;border:1px solid #aaa;border-radius:4px;cursor:text}.select2-container--default .select2-selection--multiple .select2-selection__rendered{box-sizing:border-box;list-style:none;margin:0;padding:0 5px;width:100%}.select2-container--default .select2-selection--multiple .select2-selection__rendered li{list-style:none}.select2-container--default .select2-selection--multiple .select2-selection__clear{cursor:pointer;float:right;font-weight:bold;margin-top:5px;margin-right:10px;padding:1px}.select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#e4e4e4;border:1px solid #aaa;border-radius:4px;cursor:default;float:left;margin-right:5px;margin-top:5px;padding:0 5px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:#999;cursor:pointer;display:inline-block;font-weight:bold;margin-right:2px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#333}.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-selection__choice,.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-search--inline{float:right}.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-selection__choice{margin-left:5px;margin-right:auto}.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-selection__choice__remove{margin-left:2px;margin-right:auto}.select2-container--default .select2-search--inline .select2-search__field{background:transparent;border:none;outline:0;box-shadow:none;-webkit-appearance:textfield}.select2-container--default .select2-results>.select2-results__options{max-height:200px;overflow-y:auto}.select2-container--default .select2-results__option[role=group]{padding:0}.select2-container--default .select2-results__option[aria-disabled=true]{color:#999}.select2-container--default .select2-results__option[aria-selected=true]{background-color:#ddd}.select2-container--default .select2-results__option .select2-results__option{padding-left:10px}.select2-container--default .select2-results__option .select2-results__option .select2-results__group{padding-left:0}.select2-container--default .select2-results__option .select2-results__option .select2-results__option{margin-left:-10px;padding-left:20px}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-20px;padding-left:30px}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-30px;padding-left:40px}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-40px;padding-left:50px}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-50px;padding-left:60px}.select2-container--default .select2-results__group{cursor:default;display:block;padding:6px}.select2-container--default .select2-search--dropdown .select2-search__field{border:1px solid #aaa;outline:0}.select2-container--default .select2-results__option .select2-results__option[aria-selected=true]{background-color:#ddd}.select2-container--default .select2-results__option--highlighted[aria-selected]{background-color:#5897fb;color:white}.select2-container--default .select2-results__group{cursor:default;display:block;padding:6px}
"""

# HTML with Bootstrap 5
HTML = """
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DefectDojo Engagement Creator</title>
    <style>
        """ + BOOTSTRAP_CSS + SELECT2_CSS + """
        body { background-color: #f8f9fa; }
        .container { max-width: 800px; padding-top: 2rem; }
        .card { box-shadow: 0 4px 8px rgba(0,0,0,0.1); }
        .card-header { background-color: #0d6efd; color: white; }
        .modal-content { border-radius: 0.5rem; }
        .form-check { margin-bottom: 0.5rem; }
        .btn-create { background-color: #28a745; border-color: #28a745; }
        .btn-create:hover { background-color: #218838; border-color: #1e7e34; }
        .select2-container { width: 100% !important; }
        .select2-selection--multiple { min-height: 38px !important; }
        .select2-selection__rendered { line-height: 38px !important; }
        .select2-selection__choice { margin-top: 6px !important; }
    </style>
</head>
<body>
    <div class="container">
        <div class="card">
            <div class="card-header">
                <h3 class="mb-0">Create VAPT Engagements</h3>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label for="products" class="form-label">Select Products</label>
                    <select id="products" class="form-select" multiple="multiple"></select>
                </div>
                <button id="create-btn" class="btn btn-create">Create VAPT Engagement</button>
            </div>
        </div>
    </div>

    <!-- Create Modal -->
    <div class="modal fade" id="createModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Engagement</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="quarter" class="form-label">Quarter</label>
                        <select id="quarter" class="form-select">
                            <option>Q1</option>
                            <option>Q2</option>
                            <option>Q3</option>
                            <option>Q4</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="year" class="form-label">Year</label>
                        <select id="year" class="form-select"></select>
                    </div>
                    <div class="mb-3">
                        <label for="lead" class="form-label">Lead</label>
                        <select id="lead" class="form-select"></select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Tests to Create</label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="test_vapt" value="Pentest" checked>
                            <label class="form-check-label" for="test_vapt">VAPT (Pentest)</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="test_api" value="API Scan">
                            <label class="form-check-label" for="test_api">API Test</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="test_burp" value="Burp Scan">
                            <label class="form-check-label" for="test_burp">Burp Scan</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="test_manual" value="Manual Code Review">
                            <label class="form-check-label" for="test_manual">Manual Code Review</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" id="confirm-create" class="btn btn-primary">Confirm Create</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Result Modal -->
    <div class="modal fade" id="resultModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Creation Results</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="result-body"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        var currentYear = new Date().getFullYear();
        $('#year').html(`
            <option>${currentYear}</option>
            <option>${currentYear + 1}</option>
        `);

        $('#products').select2({
            ajax: {
                url: '/search_products',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return { q: params.term || '' };
                },
                processResults: function (data) {
                    return { results: data };
                },
                cache: true
            },
            placeholder: 'Search for products',
            minimumInputLength: 0, // Allow loading all products without typing
            allowClear: true
        });

        $('#lead').select2({
            ajax: {
                url: '/get_users',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return { q: params.term || '' };
                },
                processResults: function (data) {
                    return { results: data };
                },
                cache: true
            },
            placeholder: 'Search for lead',
            minimumInputLength: 0,
            allowClear: true
        });

        $('#create-btn').click(function() {
            if ($('#products').val().length === 0) {
                alert('Please select at least one product');
                return;
            }
            new bootstrap.Modal(document.getElementById('createModal')).show();
        });

        $('#confirm-create').click(function() {
            var products = $('#products').val();
            var quarter = $('#quarter').val();
            var year = $('#year').val();
            var lead = $('#lead').val();
            var tests = [];
            if ($('#test_vapt').prop('checked')) tests.push($('#test_vapt').val());
            if ($('#test_api').prop('checked')) tests.push($('#test_api').val());
            if ($('#test_burp').prop('checked')) tests.push($('#test_burp').val());
            if ($('#test_manual').prop('checked')) tests.push($('#test_manual').val());
            if (!lead) {
                alert('Please select a lead');
                return;
            }
            if (tests.length === 0) {
                alert('Please select at least one test');
                return;
            }
            $.ajax({
                url: '/create_engagements',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({products: products, quarter: quarter, year: year, lead: lead, tests: tests}),
                success: function(results) {
                    bootstrap.Modal.getInstance(document.getElementById('createModal')).hide();
                    var msg = results.map(function(r) {
                        return r.success ? '<div class="alert alert-success">Created: ' + r.name + '</div>' : 
                                          '<div class="alert alert-danger">Error: ' + r.error + '</div>';
                    }).join('');
                    $('#result-body').html(msg);
                    new bootstrap.Modal(document.getElementById('resultModal')).show();
                }
            });
        });
    </script>
</body>
</html>
"""

@app.route('/')
def index():
    return render_template_string(HTML)

@app.route('/search_products')
def search_products():
    q = request.args.get('q', '')
    all_products = []
    offset = 0
    limit = 100  # Fetch in batches of 100 to avoid overwhelming the API
    while True:
        params = {'name__icontains': q, 'limit': limit, 'offset': offset}
        resp = requests.get(f'{DEFECT_DOJO_URL}/api/v2/products/', params=params, headers=HEADERS)
        if resp.status_code != 200:
            return jsonify([])
        data = resp.json()
        products = data.get('results', [])
        all_products.extend([{'id': p['id'], 'text': p['name']} for p in products])
        if len(products) < limit:  # No more pages
            break
        offset += limit
    return jsonify(all_products)

@app.route('/get_users')
def get_users():
    q = request.args.get('q', '')
    params = {'search': q, 'is_active': 'true', 'limit': 500, 'offset': 0}
    resp = requests.get(f'{DEFECT_DOJO_URL}/api/v2/users/', params=params, headers=HEADERS)
    if resp.status_code != 200:
        return jsonify([])
    users = resp.json().get('results', [])
    return jsonify([{'id': u['id'], 'text': f"{u.get('first_name', '')} {u.get('last_name', '')}".strip() or u['username']} for u in users])

@app.route('/create_engagements', methods=['POST'])
def create_engagements():
    data = request.json
    results = []
    today = datetime.date.today()
    next_month_start = (today + relativedelta(months=1)).replace(day=1)
    next_month_end = next_month_start + relativedelta(months=1, days=-1)
    for prod_id in data['products']:
        prod_resp = requests.get(f'{DEFECT_DOJO_URL}/api/v2/products/{prod_id}/', headers=HEADERS)
        if prod_resp.status_code != 200:
            results.append({'success': False, 'error': 'Failed to fetch product'})
            continue
        prod_name = prod_resp.json()['name']
        name = f"{prod_name}-{data['quarter']}_{data['year']}"
        # Check if engagement exists
        eng_check = requests.get(f'{DEFECT_DOJO_URL}/api/v2/engagements/', params={'name': name, 'product': prod_id}, headers=HEADERS)
        if eng_check.json().get('count', 0) > 0:
            results.append({'success': False, 'error': f'Engagement {name} already exists for this product'})
            continue
        payload = {
            'tags': ['vapt'],
            'name': name,
            'target_start': next_month_start.isoformat(),
            'target_end': next_month_end.isoformat(),
            'status': 'In Progress',
            'lead': data['lead'],
            'product': prod_id,
        }
        resp = requests.post(f'{DEFECT_DOJO_URL}/api/v2/engagements/', json=payload, headers=HEADERS)
        if resp.status_code != 201:
            results.append({'success': False, 'error': resp.text})
            continue
        eng = resp.json()
        test_errors = []
        for test_name in data['tests']:
            # Get or create test_type id
            tt_resp = requests.get(f'{DEFECT_DOJO_URL}/api/v2/test_types/', params={'name': test_name, 'limit': 1}, headers=HEADERS)
            if tt_resp.json().get('count', 0) == 0:
                tt_create = requests.post(f'{DEFECT_DOJO_URL}/api/v2/test_types/', json={'name': test_name}, headers=HEADERS)
                if tt_create.status_code == 201:
                    tt_id = tt_create.json()['id']
                else:
                    test_errors.append(f'Failed to create test_type {test_name}: {tt_create.text}')
                    continue
            else:
                tt_id = tt_resp.json()['results'][0]['id']
            test_payload = {
                'engagement': eng['id'],
                'test_type': tt_id,
                'target_start': payload['target_start'],
                'target_end': payload['target_end'],
            }
            resp_test = requests.post(f'{DEFECT_DOJO_URL}/api/v2/tests/', json=test_payload, headers=HEADERS)
            if resp_test.status_code != 201:
                test_errors.append(f'Failed to create test {test_name}: {resp_test.text}')
        if test_errors:
            results.append({'success': False, 'error': 'Engagement created but some tests failed: ' + '; '.join(test_errors), 'name': name})
        else:
            results.append({'success': True, 'name': name})
    return jsonify(results)

def create_image():
    image = Image.new('RGB', (64, 64), color=(0, 255, 0))
    return image

def open_browser():
    webbrowser.open('http://127.0.0.1:5000')

def quit_app(icon, item):
    icon.stop()
    os._exit(0)

def run_flask():
    app.run(port=5000, debug=False, use_reloader=False)

if __name__ == '__main__':
    flask_thread = threading.Thread(target=run_flask)
    flask_thread.daemon = True
    flask_thread.start()

    webbrowser.open('http://127.0.0.1:5000')

    icon = pystray.Icon('DefectDojo Creator')
    icon.icon = create_image()
    icon.menu = pystray.Menu(
        pystray.MenuItem('Open', open_browser),
        pystray.MenuItem('Exit', quit_app)
    )
    icon.run()