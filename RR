import os
import requests
from bs4 import BeautifulSoup
from urllib.parse import urlparse
import hashlib

# === Configuration ===
html_input = 'input.html'
html_output = 'output.html'
image_folder = 'images'
cookie_name = 'sessionid'
cookie_value = 'your_cookie_value_here'  # ← Paste from Chrome DevTools
cookie_domain = 'demo.defectdojo.org'

# Set up session with manual cookie
session = requests.Session()
session.cookies.set(cookie_name, cookie_value, domain=cookie_domain)

# Create image folder
os.makedirs(image_folder, exist_ok=True)

# Parse HTML
with open(html_input, 'r', encoding='utf-8') as f:
    soup = BeautifulSoup(f, 'html.parser')

# Process images
for img_tag in soup.find_all('img'):
    src = img_tag.get('src')
    if not src or not src.startswith('http'):
        continue

    ext = '.png'
    filename = hashlib.md5(src.encode()).hexdigest() + ext
    local_path = os.path.join(image_folder, filename)

    if not os.path.exists(local_path):
        try:
            resp = session.get(src, timeout=10)
            if 'image' in resp.headers.get('Content-Type', ''):
                with open(local_path, 'wb') as f_out:
                    f_out.write(resp.content)
                print(f"✅ Image saved: {src}")
            else:
                print(f"⚠️ Not an image (Content-Type: {resp.headers.get('Content-Type', '')})")
                continue
        except Exception as e:
            print(f"❌ Error downloading {src}: {e}")
            continue

    img_tag['src'] = os.path.join(image_folder, filename)

# Save updated HTML
with open(html_output, 'w', encoding='utf-8') as f:
    f.write(str(soup))

print(f"\n✅ Finished. Updated HTML saved to: {html_output}")