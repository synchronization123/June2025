import os
import requests
import browser_cookie3
from bs4 import BeautifulSoup
from urllib.parse import urlparse
import hashlib

# === Configuration ===
html_input = 'input.html'         # Input HTML
html_output = 'output.html'       # Output HTML with updated <img>
image_folder = 'images'           # Download folder
domain = 'demo.defectdojo.org'    # DefectDojo domain (no https)

# Create image folder
os.makedirs(image_folder, exist_ok=True)

# Load browser cookies (Chrome/Edge/Firefox)
cookies = browser_cookie3.load(domain_name=domain)

# Load HTML
with open(html_input, 'r', encoding='utf-8') as f:
    soup = BeautifulSoup(f, 'html.parser')

# Process images
for img_tag in soup.find_all('img'):
    src = img_tag.get('src')
    if not src or not src.startswith('http'):
        continue

    # Build filename
    ext = '.png'
    name_hash = hashlib.md5(src.encode()).hexdigest()
    local_file = os.path.join(image_folder, f"{name_hash}{ext}")

    if not os.path.exists(local_file):
        try:
            response = requests.get(src, cookies=cookies, timeout=10)
            if 'image' in response.headers.get('Content-Type', ''):
                with open(local_file, 'wb') as f_out:
                    f_out.write(response.content)
                print(f"Downloaded image: {src}")
            else:
                print(f"Skipped (not image): {src}")
                continue
        except Exception as e:
            print(f"Error: {e}")
            continue

    # Update HTML path
    img_tag['src'] = os.path.join(image_folder, f"{name_hash}{ext}")

# Save output HTML
with open(html_output, 'w', encoding='utf-8') as f:
    f.write(str(soup))

print(f"\nâœ… Completed. Output: {html_output}")